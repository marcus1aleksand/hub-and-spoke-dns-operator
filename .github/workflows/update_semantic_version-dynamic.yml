name: Release Version

on:
  push:
    branches:
      - main
    paths:
      - 'operator/**'

jobs:
  update-semver:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Update Semantic Version
      id: semantic_version
      uses: paulhatch/semantic-version@v5.4.0
      with:
        tag_prefix: ""
        major_pattern: "major:"
        minor_pattern: "feat:"
        bump_each_commit_patch_pattern: "fix:"
        version_format: "${major}.${minor}.${patch}"
        change_path: ./operator
        bump_each_commit: false
        search_commit_body: true
        user_format_type: "json"

    - name: Cancel if Unchanged
      if: ${{ ! steps.semantic_version.outputs.changed }}
      run: |
        gh run cancel ${{ github.run_id }}
        gh run watch ${{ github.run_id }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Bump version and push tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v6.1
      with:
        custom_tag: ${{ steps.semantic_version.outputs.version_tag }}
        tag_prefix: ""
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Create Production Release
      uses: ncipollo/release-action@v1
      id: release
      with:
        tag: ${{ steps.tag_version.outputs.new_tag }}
        name: "hub-and-spoke-dns-operator"
        draft: false
        prerelease: false
        commit: ${{ steps.semantic_version.outputs.current_commit }}

    - name: Log in to GHCR
      run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Build and Push Container Image
      working-directory: ./operator
      run: |
        docker build -t ghcr.io/${{ github.repository_owner }}/hub-and-spoke-dns-operator:${{ steps.tag_version.outputs.new_tag }} .
        docker push ghcr.io/${{ github.repository_owner }}/hub-and-spoke-dns-operator:${{ steps.tag_version.outputs.new_tag }}
    
    - name: Package and Publish Helm-Chart
      working-directory: ./charts
      run: |
        helm lint .
        helm package . --version ${{ steps.tag_version.outputs.new_tag }} --app-version ${{ steps.tag_version.outputs.new_tag }}
        helm inspect chart *.tgz
        helm push *.tgz oci://ghcr.io/${{ github.repository_owner }}/helm-charts

    - name: Update the Chart version
      uses: fjogeleit/yaml-update-action@main
      with:
        valueFile: 'charts/Chart.yaml'
        repository: hub-and-spoke-dns-operator
        branch: main
        createPR: false
        token: ${{ secrets.GITHUB_TOKEN }}
        commitChange: true
        message: 'Update Helm chart version to ${{ steps.tag_version.outputs.new_tag }}' 
        changes: |
          {
            "version": "${{ steps.tag_version.outputs.new_tag }}",
            "appVersion": "${{ steps.tag_version.outputs.new_tag }}"
          }
  